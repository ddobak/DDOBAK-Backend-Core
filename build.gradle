plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sbpb.ddobak'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	
	// JWT 토큰 처리
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	
	// JSON 처리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	
	// JWT for Apple OAuth (Apple ID Token 검증용)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	
	// Environment variables (.env file support)
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	
	// AWS SDK
	implementation platform('software.amazon.awssdk:bom:2.28.29')
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:lambda'
	implementation 'software.amazon.awssdk:sfn'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	
	// Database
	implementation 'org.postgresql:postgresql' // PostgreSQL 드라이버
	runtimeOnly 'com.h2database:h2' // H2 인메모리 DB (테스트 프로파일용)
	
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Test Tasks
task testS3(type: Test) {
	description = 'S3 순차 테스트 파일 생성 (Infrastructure Adapter)'
	useJUnitPlatform()
	include '**/S3ClientAdapterTest.class'
	filter {
		includeTestsMatching "*.createSequentialTestFile"
	}
	
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		showStandardStreams = true
	}
}
task testLambda(type: Test) {
	description = 'Lambda 테스트 (Infrastructure Adapter)'
	useJUnitPlatform()
	include '**/LambdaUtilTest.class'
	
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		showStandardStreams = true
	}
}