name: Deploy to EC2

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build with Gradle
      run: ./gradlew clean bootJar -x test
      
    - name: Copy JAR to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        source: "build/libs/main-server-0.0.1-SNAPSHOT.jar"
        target: "/home/ec2-user/DDOBAK-Backend-Core/build/libs/"
        strip_components: 0
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        timeout: 60s
        script: |
          cd /home/ec2-user/DDOBAK-Backend-Core
          
          # 기존 서버 중지
          pkill -f "java -jar" || true
          sleep 3
          
          # 서버 재시작
          nohup java -jar build/libs/main-server-0.0.1-SNAPSHOT.jar > server.log 2>&1 &
          
          # 서버 상태 확인
          sleep 5
          ps aux | grep java | grep -v grep
          netstat -tlnp | grep 8080 || echo "Port 8080 not yet listening"
          tail -3 server.log
          
          echo "Deployment completed successfully!" 