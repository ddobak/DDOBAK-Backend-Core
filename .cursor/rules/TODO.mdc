---
description: At the final stage of a request or after completing a task, when it’s time to look for the next one
globs: 
alwaysApply: false
---
# TODO 체크리스트

## 1️⃣ 환경 및 설정
- [x] profile 기반 aws 환경 구성. (사용 프로필: `ddobak`)
- [x] `.env` / `application.yml`에 S3 버킷(service-bucket, test-bucket) 및 Lambda 이름(ocr-lambda, analysis-lambda) 등록
  - [x] 프로퍼티 키 네이밍 컨벤션 확정 (`aws.s3.service-bucket` 등)
- [x] `AwsConfig` 클래스 작성
  - [x] `@ConfigurationProperties`로 환경 변수 매핑
  - [x] S3Client, LambdaClient 빈 등록 (region, profile=ddobak)

## 2️⃣ 유틸리티 모듈
- [x] `S3Util`
  - [x] `upload(bucket, key, file)`
  - [x] `download(bucket, key)`
  - [x] `delete(bucket, key)`
  - [x] `generatePresignedUrl(bucket, key, expiry)`
- [x] `LambdaUtil`
  - [x] `listFunctions()`
  - [x] `invokeAsync(lambdaName, payload)`
  - [x] `invokeAndWait(lambdaName, payload)` (폴링 or StepFunctions 미사용)

## 3️⃣ 도메인 모델 & 레포지토리
- [x] `contracts`, `ocr_contents`, `contract_analyses`, `toxic_clauses` 엔티티 생성
- [x] 각 엔티티에 대한 Spring Data JPA 리포지토리 작성

## 4️⃣ API 구현
- [x] `POST /contract/ocr`
  - [x] 다중 이미지 업로드 → S3 저장
  - [x] Lambda 병렬 호출 (순서 보장) & OCR 결과 저장
- [x] `GET /contract/ocr/{contractId}`
  - [x] OCR 결과 페이지별 반환
- [x] `PATCH /contract/ocr/{contractId}`
  - [x] OCR HTML 수정 반영
- [x] `POST /contract/analysis`
  - [x] analysis-lambda 비동기 호출 & 상태 저장
- [x] `GET /contract/{contractId}/analysis/{analysisId}`
  - [x] 분석 결과 반환

## 5️⃣ 테스트
- [x] 유틸 단위 테스트 (S3Util, LambdaUtil) - ✅ 기본 테스트 프레임워크 구성
- [x] API 통합 테스트 (MockMultipartFile 등 활용) - ✅ ContractController 테스트 구현

## 6️⃣ 문서화 & Lambda 스키마
- [x] Lambda 입출력 스키마 정의 및 Cursor Rule 생성
- [x] Lambda 호출 코드를 새로운 스키마에 맞게 수정
- [x] Debug 레벨 Lambda 요청/응답 로깅 추가
- [ ] Swagger / SpringDoc 설정
- [ ] PRD·ERD 문서 링크 업데이트

---

## ✅ **구현 완료 현황 요약**

### 🏗️ **핵심 인프라 (100% 완료)**
- **AWS 설정**: 환경 구성, AwsConfig 클래스, S3/Lambda 클라이언트 빈
- **유틸리티**: S3Util (8개 메서드), LambdaUtil (6개 메서드)
- **데이터베이스**: 4개 엔티티 + JPA 레포지토리 + 커스텀 쿼리

### 🌐 **API 완료 (100% 완료)**
- **`POST /contract/ocr`**: 다중 파일 업로드 → S3 저장 → Lambda 병렬 호출
- **`GET /contract/ocr/{contractId}`**: OCR 결과 조회 (HTML 조합)
- **`PATCH /contract/ocr/{contractId}`**: OCR 내용 수정
- **`POST /contract/analysis`**: 분석 Lambda 비동기 호출
- **`GET /contract/{contractId}/analysis/{analysisId}`**: 분석 결과 조회

### 🔧 **기술적 특징**
- **Clean Architecture**: 도메인-서비스-컨트롤러 레이어 분리
- **서버리스 통합**: AWS Lambda/S3 비동기 처리
- **병렬 처리**: CompletableFuture 기반 다중 이미지 OCR
- **타입 안전성**: Generic 기반 API 응답 구조

> **참고**: 인증·인가, 로그 트레이싱, CI/CD, Step Functions는 현재 범위에서 제외됨

